<Activity mc:Ignorable="sap sap2010" x:Class="Excel_Formatting" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Arg_Status" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="In_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>933,5560</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Excel_Formatting_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="58">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Excel_Formatting" sap:VirtualizedContainerService.HintSize="756,5495" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Branch" sap:VirtualizedContainerService.HintSize="694,2888" sap2010:WorkflowViewState.IdRef="Sequence_36">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="632,2766" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="594,2529" sap2010:WorkflowViewState.IdRef="Sequence_60">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="Folder_Path" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="532,142" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="excel" />
            <ui:GetEnvironmentFolder DisplayName="Get Environment Folder" FolderPath="[Folder_Path]" sap:VirtualizedContainerService.HintSize="532,71" sap2010:WorkflowViewState.IdRef="GetEnvironmentFolder_1" SpecialFolder="MyDocuments" />
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="532,2114" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[Folder_Path+In_Config(&quot;Path1&quot;).ToString]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="498,1995" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataTable" Name="Branch" />
                      <Variable x:TypeArguments="ui:GenericValue" Name="Row_Count" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[Branch]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="436,69" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Branch">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <Assign sap:VirtualizedContainerService.HintSize="436,70" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[Row_Count]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">[Branch.Rows.Count+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelWriteCell Cell="[&quot;F3:F&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Branch" Text="=1*1" />
                    <ui:ExcelWriteCell Cell="[&quot;G3:G&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Branch" Text="=F3*40000/100000" />
                    <ui:ExcelWriteCell Cell="[&quot;H3:H&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Branch" Text="[&quot;=COUNTIFS('Daily Business'!A:A,@Branch!A:A,'Daily Business'!T:T,&quot;&quot;Yes&quot;&quot;)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;I3:I&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Branch" Text="=IF(H3&lt;=0,0,SUMIF('Daily Business'!A:A,@Branch!A:A,'Daily Business'!AA:AA)/100000)" />
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,307" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,219" sap2010:WorkflowViewState.IdRef="Sequence_51">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelWriteCell Cell="[&quot;J3:J&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Branch" Text="=ROUND(0.24*25,0)" />
                        </Sequence>
                      </ui:CommentOut.Body>
                    </ui:CommentOut>
                    <ui:ExcelWriteCell Cell="[&quot;K3:K&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Branch" Text="=(J3*40000)/100000" />
                    <ui:ExcelWriteCell Cell="[&quot;L3:L&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="Branch" Text="[&quot;=COUNTIFS('Monthly Business'!A:A,@Branch!A:A,'Monthly Business'!T:T,&quot;&quot;Yes&quot;&quot;)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;M3:M&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Branch" Text="=IF(L3&lt;=0,0,SUMIF('Monthly Business'!A:A,@Branch!A:A,'Monthly Business'!AA:AA)/100000)" />
                    <ui:ExcelWriteCell Cell="[&quot;N3:N&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Branch" Text="[&quot;=IF(L3&lt;=0,&quot;&quot;D&quot;&quot;,IF(AND(L3&gt;0,L3&lt;=3),&quot;&quot;C&quot;&quot;,IF(AND(L3&gt;3,L3&lt;=6),&quot;&quot;B&quot;&quot;,IF(L3&gt;6,&quot;&quot;A&quot;&quot;))))&quot;]" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="436,101" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Branch completed&quot;]" />
                    <Assign sap:VirtualizedContainerService.HintSize="436,70" sap2010:WorkflowViewState.IdRef="Assign_11">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="598,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_52">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[exception.Message]" />
                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <Sequence DisplayName="Area" sap:VirtualizedContainerService.HintSize="694,90" sap2010:WorkflowViewState.IdRef="Sequence_38">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="534,2922" sap2010:WorkflowViewState.IdRef="TryCatch_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="496,2685" sap2010:WorkflowViewState.IdRef="Sequence_61">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="Folder_Path" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetEnvironmentFolder DisplayName="Get Environment Folder" FolderPath="[Folder_Path]" sap:VirtualizedContainerService.HintSize="434,71" sap2010:WorkflowViewState.IdRef="GetEnvironmentFolder_2" SpecialFolder="MyDocuments" />
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,2452" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[Folder_Path+In_Config(&quot;Path1&quot;).ToString]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,2333" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataTable" Name="Branch" />
                      <Variable x:TypeArguments="ui:GenericValue" Name="Row_Count" />
                      <Variable x:TypeArguments="sd:DataTable" Name="Area" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[Area]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="338,69" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Area">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[Row_Count]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">[Area.Rows.Count+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelWriteCell Cell="[&quot;D3:D&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Area" Text="=COUNTIF(Branch!C:C,@Area!A:A)" />
                    <ui:ExcelWriteCell Cell="[&quot;E3:E&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="Area" Text="=ROUND(0.4*D3,0)" />
                    <ui:ExcelWriteCell Cell="[&quot;F3:F&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Area" Text="=(E3*40000)/100000" />
                    <ui:ExcelWriteCell Cell="[&quot;G3:G&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="Area" Text="=SUMIF(Branch!C:C,@Area!A:A,Branch!H:H)" />
                    <ui:ExcelWriteCell Cell="[&quot;H3:H&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="Area" Text="=SUMIF(Branch!C:C,@Area!A:A,Branch!M:M)" />
                    <ui:ExcelWriteCell Cell="[&quot;I3:I&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="Area" Text="=ROUND(0.4*25*D3,0)" />
                    <ui:ExcelWriteCell Cell="[&quot;J3:J&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="Area" Text="=(I3*40000)/100000" />
                    <ui:ExcelWriteCell Cell="[&quot;K3:K&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="Area" Text="=SUMIF(Branch!C:C,@Area!A:A,Branch!L:L)" />
                    <ui:ExcelWriteCell Cell="[&quot;L3:L&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="Area" Text="=SUMIF(Branch!C:C,@Area!A:A,Branch!M:M)" />
                    <ui:ExcelWriteCell Cell="[&quot;M3:M&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="Area" Text="[&quot;=COUNTIFS(Branch!C:C,@Area!A:A,Branch!N:N,&quot;&quot;A&quot;&quot;)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;N3:N&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="Area" Text="[&quot;=COUNTIFS(Branch!C:C,@Area!A:A,Branch!N:N,&quot;&quot;B&quot;&quot;)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;O3:O&quot;+Row_Count+1]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="Area" Text="[&quot;=COUNTIFS(Branch!C:C,@Area!A:A,Branch!N:N,&quot;&quot;C&quot;&quot;)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;P3:P&quot;+Row_Count+1]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="Area" Text="[&quot;=COUNTIFS(Branch!C:C,@Area!A:A,Branch!N:N,&quot;&quot;D&quot;&quot;)&quot;]" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Area completed&quot;]" />
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="400,330" sap2010:WorkflowViewState.IdRef="Sequence_53">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[exception.Message]" />
                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <Sequence DisplayName="Region" sap:VirtualizedContainerService.HintSize="694,90" sap2010:WorkflowViewState.IdRef="Sequence_39">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="534,3059" sap2010:WorkflowViewState.IdRef="TryCatch_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="496,2822" sap2010:WorkflowViewState.IdRef="Sequence_62">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="Folder_Path" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetEnvironmentFolder DisplayName="Get Environment Folder" FolderPath="[Folder_Path]" sap:VirtualizedContainerService.HintSize="434,71" sap2010:WorkflowViewState.IdRef="GetEnvironmentFolder_3" SpecialFolder="MyDocuments" />
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,2589" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" WorkbookPath="[Folder_Path+In_Config(&quot;Path1&quot;).ToString]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,2470" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataTable" Name="Branch" />
                      <Variable x:TypeArguments="ui:GenericValue" Name="Row_Count" />
                      <Variable x:TypeArguments="sd:DataTable" Name="Region" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[Region]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="338,69" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="Region">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[Row_Count]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">[Region.Rows.Count+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelWriteCell Cell="[&quot;C3:C&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="Region" Text="=COUNTIF(Area!B:B,@Region!A:A)" />
                    <ui:ExcelWriteCell Cell="[&quot;D3:D&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_36" SheetName="Region" Text="=COUNTIF(Branch!D:D,@Region!A:A)" />
                    <ui:ExcelWriteCell Cell="[&quot;E3:E&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="Region" Text="=ROUND(D3*0.4,0)" />
                    <ui:ExcelWriteCell Cell="[&quot;F3:F&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="Region" Text="=(E3*40000)/100000" />
                    <ui:ExcelWriteCell Cell="[&quot;G3:G&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="Region" Text="=SUMIF(Area!B:B,@Region!A:A,Area!G:G)" />
                    <ui:ExcelWriteCell Cell="[&quot;H3:H&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_27" SheetName="Region" Text="=SUMIF(Area!B:B,@Region!A:A,Area!H:H)" />
                    <ui:ExcelWriteCell Cell="[&quot;I3:I&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_28" SheetName="Region" Text="=ROUND(D3*0.4*25,0)" />
                    <ui:ExcelWriteCell Cell="[&quot;J3:J&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_29" SheetName="Region" Text="=(I3*40000)/100000" />
                    <ui:ExcelWriteCell Cell="[&quot;K3:K&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_30" SheetName="Region" Text="=SUMIF(Area!B:B,@Region!A:A,Area!K:K)" />
                    <ui:ExcelWriteCell Cell="[&quot;L3:L&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_31" SheetName="Region" Text="=SUMIF(Area!B:B,@Region!A:A,Area!L:L)" />
                    <ui:ExcelWriteCell Cell="[&quot;M3:M&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_32" SheetName="Region" Text="=SUMIF(Area!B:B,@Region!A:A,Area!M:M)" />
                    <ui:ExcelWriteCell Cell="[&quot;N3:N&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_33" SheetName="Region" Text="=SUMIF(Area!B:B,@Region!A:A,Area!N:N)" />
                    <ui:ExcelWriteCell Cell="[&quot;O3:O&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_34" SheetName="Region" Text="=SUMIF(Area!B:B,@Region!A:A,Area!O:O)" />
                    <ui:ExcelWriteCell Cell="[&quot;P3:P&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_35" SheetName="Region" Text="=SUMIF(Area!B:B,@Region!A:A,Area!P:P)" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Region completed&quot;]" />
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_54">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Error" Message="[exception.Message]" />
                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <Sequence DisplayName="Hub Branch" sap:VirtualizedContainerService.HintSize="694,90" sap2010:WorkflowViewState.IdRef="Sequence_20">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="534,2648" sap2010:WorkflowViewState.IdRef="TryCatch_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="496,2411" sap2010:WorkflowViewState.IdRef="Sequence_63">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="Folder_Path" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetEnvironmentFolder DisplayName="Get Environment Folder" FolderPath="[Folder_Path]" sap:VirtualizedContainerService.HintSize="434,71" sap2010:WorkflowViewState.IdRef="GetEnvironmentFolder_4" SpecialFolder="MyDocuments" />
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,2178" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000" WorkbookPath="[Folder_Path+In_Config(&quot;Path1&quot;).ToString]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,2059" sap2010:WorkflowViewState.IdRef="Sequence_30">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataTable" Name="Branch" />
                      <Variable x:TypeArguments="ui:GenericValue" Name="Row_Count" />
                      <Variable x:TypeArguments="sd:DataTable" Name="Area" />
                      <Variable x:TypeArguments="sd:DataTable" Name="Hub_branch" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[Hub_branch]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="338,69" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" SheetName="HUB Branch">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[Row_Count]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">[Hub_branch.Rows.Count+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelWriteCell Cell="[&quot;H4:H&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_80" SheetName="HUB Branch" Text="=G4*40000/100000" />
                    <ui:ExcelWriteCell Cell="[&quot;I4:I&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_81" SheetName="HUB Branch" Text="=SUMIF(Branch!A:A,@'HUB Branch'!A:A,Branch!H:H)" />
                    <ui:ExcelWriteCell Cell="[&quot;J4:J&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_82" SheetName="HUB Branch" Text="=SUMIF(Branch!A:A,@'HUB Branch'!A:A,Branch!I:I)" />
                    <ui:ExcelWriteCell Cell="[&quot;K4:K&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_83" SheetName="HUB Branch" Text="=ROUND(G4*25,0)" />
                    <ui:ExcelWriteCell Cell="[&quot;L4:L&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_84" SheetName="HUB Branch" Text="=K4*40000/100000" />
                    <ui:ExcelWriteCell Cell="[&quot;M4:M&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_85" SheetName="HUB Branch" Text="=SUMIF(Branch!A:A,@'HUB Branch'!A:A,Branch!L:L)" />
                    <ui:ExcelWriteCell Cell="[&quot;N4:N&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_86" SheetName="HUB Branch" Text="=SUMIF(Branch!A:A,@'HUB Branch'!A:A,Branch!M:M)" />
                    <ui:ExcelWriteCell Cell="[&quot;O4:O&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_87" SheetName="HUB Branch" Text="[&quot;=IF(F4=&quot;&quot;yes&quot;&quot;,I4,&quot;&quot;&quot;&quot;)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;P4:P&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_88" SheetName="HUB Branch" Text="[&quot;=IF(F4=&quot;&quot;yes&quot;&quot;,J4,&quot;&quot;&quot;&quot;)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;Q4:Q&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_89" SheetName="HUB Branch" Text="[&quot;=IF(F4=&quot;&quot;yes&quot;&quot;,M4,&quot;&quot;&quot;&quot;)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;R4:R&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_90" SheetName="HUB Branch" Text="[&quot;=IF(F4=&quot;&quot;yes&quot;&quot;,N4,&quot;&quot;&quot;&quot;)&quot;]" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Hub branch completed&quot;]" />
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_17">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_55">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[exception.Message]" />
                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_18">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <Sequence DisplayName="Outstanding" sap:VirtualizedContainerService.HintSize="596,90" sap2010:WorkflowViewState.IdRef="Sequence_41">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="534,2320" sap2010:WorkflowViewState.IdRef="TryCatch_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="496,2083" sap2010:WorkflowViewState.IdRef="Sequence_64">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="Folder_Path" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetEnvironmentFolder DisplayName="Get Environment Folder" FolderPath="[Folder_Path]" sap:VirtualizedContainerService.HintSize="434,71" sap2010:WorkflowViewState.IdRef="GetEnvironmentFolder_5" SpecialFolder="MyDocuments" />
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,1850" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" WorkbookPath="[Folder_Path+In_Config(&quot;Path1&quot;).ToString]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,1731" sap2010:WorkflowViewState.IdRef="Sequence_40">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataTable" Name="Branch" />
                      <Variable x:TypeArguments="ui:GenericValue" Name="Row_Count" />
                      <Variable x:TypeArguments="sd:DataTable" Name="Area" />
                      <Variable x:TypeArguments="sd:DataTable" Name="Hub_branch" />
                      <Variable x:TypeArguments="sd:DataTable" Name="Outstanding" />
                      <Variable x:TypeArguments="x:String" Name="month_last_date" />
                      <Variable x:TypeArguments="x:String" Name="today_date" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[Outstanding]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="338,69" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" SheetName="Outstanding">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[month_last_date]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[New DateTime(now.Year,now.Month,1).AddDays(-1).toString("dd/MMM/yyyy")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelWriteCell Cell="G1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_102" SheetName="Outstanding" Text="[month_last_date]" />
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[today_date]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Date.Now.ToString("dd/MMM/yyyy")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelWriteCell Cell="I1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_103" SheetName="Outstanding" Text="[today_date]" />
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[Row_Count]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">[Outstanding.Rows.Count+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelWriteCell Cell="[&quot;G3:G&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_95" SheetName="Outstanding" Text="[&quot;=VLOOKUP(A3,'C:\Users\&quot;+Environment.UserName+&quot;\Documents\UiPath\Doorstep Gold Loan NCA Automation\Input\[Monthly_outstanding_report.xlsx]DoorstepReport_monthly'!$A:$E,5,0)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;H3:H&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_94" SheetName="Outstanding" Text="[&quot;=VLOOKUP(A3,'C:\Users\&quot;+Environment.UserName+&quot;\Documents\UiPath\Doorstep Gold Loan NCA Automation\Input\[Monthly_outstanding_report.xlsx]DoorstepReport_monthly'!$A:$F,6,0)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;I3:I&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_92" SheetName="Outstanding" Text="[&quot;=VLOOKUP(A3,'C:\Users\&quot;+Environment.UserName+&quot;\Documents\UiPath\Doorstep Gold Loan NCA Automation\Input\[Daily_outstanding_report.xlsx]DoorstepReport'!$A:$E,5,0)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;J3:J&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_93" SheetName="Outstanding" Text="[&quot;=VLOOKUP(A3,'C:\Users\&quot;+Environment.UserName+&quot;\Documents\UiPath\Doorstep Gold Loan NCA Automation\Input\[Daily_outstanding_report.xlsx]DoorstepReport'!$A:$F,6,0)&quot;]" />
                    <ui:ExcelWriteCell Cell="[&quot;F3:F&quot;+Row_Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_104" SheetName="Outstanding" Text="=J3-H3" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Outstanding completed&quot;]" />
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_19">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_56">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Error" Message="[exception.Message]" />
                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_20">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <Sequence DisplayName="Growth" sap:VirtualizedContainerService.HintSize="596,90" sap2010:WorkflowViewState.IdRef="Sequence_42">
      <Sequence.Variables>
        <Variable x:TypeArguments="ui:GenericValue" Default="[2]" Name="Count" />
        <Variable x:TypeArguments="s:String[]" Name="Zones" />
        <Variable x:TypeArguments="sd:DataTable" Name="Outstand_report" />
        <Variable x:TypeArguments="sd:DataTable" Name="Outstand_report_new" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="730,2171" sap2010:WorkflowViewState.IdRef="TryCatch_7">
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="692,1934" sap2010:WorkflowViewState.IdRef="Sequence_65">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="Folder_Path" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetEnvironmentFolder DisplayName="Get Environment Folder" FolderPath="[Folder_Path]" sap:VirtualizedContainerService.HintSize="630,71" sap2010:WorkflowViewState.IdRef="GetEnvironmentFolder_6" SpecialFolder="MyDocuments" />
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="630,1701" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" InstanceCachePeriod="3000" WorkbookPath="[Folder_Path+In_Config(&quot;Path1&quot;).ToString]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="596,1582" sap2010:WorkflowViewState.IdRef="Sequence_43">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[Outstand_report]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="534,69" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" SheetName="Outstanding">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <Assign sap:VirtualizedContainerService.HintSize="534,70" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">[Zones]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">[{"FZM-1","FZM-2","FZM-3","FZM-4","FZM-5","FZM-6","FZM-7","FZM-8"}]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[Count&lt;10]" sap:VirtualizedContainerService.HintSize="534,1241" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="498,1045" sap2010:WorkflowViewState.IdRef="Sequence_45">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="436,923" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Zones]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="Item" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,790" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:FilterDataTable DataTable="[Outstand_report]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="338,170" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[Outstand_report_new]" SelectColumnsMode="Keep">
                                    <ui:FilterDataTable.Filters>
                                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                          <ui:FilterOperationArgument.Column>
                                            <InArgument x:TypeArguments="x:String">["FZM"]</InArgument>
                                          </ui:FilterOperationArgument.Column>
                                          <ui:FilterOperationArgument.Operand>
                                            <InArgument x:TypeArguments="x:String">[Item.ToString]</InArgument>
                                          </ui:FilterOperationArgument.Operand>
                                        </ui:FilterOperationArgument>
                                      </scg:List>
                                    </ui:FilterDataTable.Filters>
                                    <ui:FilterDataTable.SelectColumns>
                                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                                        <x:Null />
                                      </scg:List>
                                    </ui:FilterDataTable.SelectColumns>
                                  </ui:FilterDataTable>
                                  <ui:ExcelWriteCell Cell="[&quot;AR&quot;+Count]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_105" SheetName="Zone" Text="[Outstand_report_new.AsEnumerable.Sum(Function(x)Convert.ToDecimal(x(&quot;Growth&quot;))).ToString]" />
                                  <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_10">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:GenericValue">[Count]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:GenericValue">[Count+1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Growth calculation completed&quot;]" />
                                  <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_46">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="696,21" sap2010:WorkflowViewState.IdRef="Catch`1_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_57">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Error" Message="[exception.Message]" />
                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_23">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <Sequence DisplayName="Zone" sap:VirtualizedContainerService.HintSize="596,1455" sap2010:WorkflowViewState.IdRef="Sequence_48">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="534,1333" sap2010:WorkflowViewState.IdRef="TryCatch_8">
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="496,1096" sap2010:WorkflowViewState.IdRef="Sequence_66">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="Folder_Path" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetEnvironmentFolder DisplayName="Get Environment Folder" FolderPath="[Folder_Path]" sap:VirtualizedContainerService.HintSize="434,71" sap2010:WorkflowViewState.IdRef="GetEnvironmentFolder_7" SpecialFolder="MyDocuments" />
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,863" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" InstanceCachePeriod="3000" WorkbookPath="[Folder_Path+In_Config(&quot;Path1&quot;).ToString]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,744" sap2010:WorkflowViewState.IdRef="Sequence_49">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="Value" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ReadCell Cell="C2" DisplayName="Read Cell Workbook" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ReadCell_1" SheetName="Sheet1" WorkbookPath="[Folder_Path+In_Config(&quot;SundayCount_Path&quot;).ToString]">
                      <ui:ReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[Value]</OutArgument>
                      </ui:ReadCell.Result>
                    </ui:ReadCell>
                    <ui:ExcelWriteCell Cell="AN3:AN10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_106" SheetName="Zone" Text="[&quot;=U3/B3/&quot;+Value]" />
                    <ui:ExcelWriteCell Cell="AN11" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_107" SheetName="Zone" Text="=AVERAGE(AN3:AN10)" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Zone completed&quot;]" />
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_22">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,21" sap2010:WorkflowViewState.IdRef="Catch`1_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_59">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Error" Message="[exception.Message]" />
                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="596,300" sap2010:WorkflowViewState.IdRef="CommentOut_9">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="462,212" sap2010:WorkflowViewState.IdRef="Sequence_50">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Zone" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_47">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="472,2760" sap2010:WorkflowViewState.IdRef="TryCatch_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,2523" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" WorkbookPath="Output\Days_Count.xlsx">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,2404" sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="ui:GenericValue" Name="Row_Count" />
                          <Variable x:TypeArguments="sd:DataTable" Name="Zone" />
                          <Variable x:TypeArguments="x:String" Name="day_count" />
                          <Variable x:TypeArguments="ui:GenericValue" Name="Value" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelReadCell Cell="C2" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="338,69" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Sheet1">
                          <ui:ExcelReadCell.Result>
                            <OutArgument x:TypeArguments="ui:GenericValue">[Value]</OutArgument>
                          </ui:ExcelReadCell.Result>
                        </ui:ExcelReadCell>
                        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[Value]" />
                        <ui:WriteRange DataTable="{x:Null}" AddHeaders="False" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="338,125" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Zone" StartingCell="AN3:AN10" WorkbookPath="Output\Doorstep Gold Loan NCA Report.xlsx" />
                        <ui:WriteCell Cell="AN3:AN10" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="338,125" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="Zone" Text="=U3/B3" WorkbookPath="Output\Doorstep Gold Loan NCA Report.xlsx" />
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,219" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelWriteCell Cell="[&quot;AB3:AB&quot;+Row_Count+1]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_64" SheetName="Zone" Text="=SUMIF('HUB Branch'!E:E,@Zone!A:A,'HUB Branch'!N:N)" />
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                        <ui:ExcelWriteCell Cell="AC3:AC10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_65" SheetName="Zone" Text="=ROUND(F3*4*25,0)" />
                        <ui:ExcelWriteCell Cell="AD3:AD10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_66" SheetName="Zone" Text="=(F3*40000*25)/100000" />
                        <ui:ExcelWriteCell Cell="AE3:AE10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_67" SheetName="Zone" Text="=SUMIF('HUB Branch'!E:E,@Zone!A:A,'HUB Branch'!Q:Q)" />
                        <ui:ExcelWriteCell Cell="AF3:AF10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_68" SheetName="Zone" Text="=SUMIF('HUB Branch'!E:E,@Zone!A:A,'HUB Branch'!R:R)" />
                        <ui:ExcelWriteCell Cell="AG3:AG10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_69" SheetName="Zone" Text="=SUMIF(Region!B:B,@Zone!A:A,Region!M:M)" />
                        <ui:ExcelWriteCell Cell="AH3:AH10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_70" SheetName="Zone" Text="=SUMIF(Region!B:B,@Zone!A:A,Region!N:N)" />
                        <ui:ExcelWriteCell Cell="AI3:I10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_71" SheetName="Zone" Text="=SUMIF(Region!B:B,@Zone!A:A,Region!O:O)" />
                        <ui:ExcelWriteCell Cell="AJ3:J10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_72" SheetName="Zone" Text="=SUMIF(Region!B:B,@Zone!A:A,Region!P:P)" />
                        <ui:ExcelWriteCell Cell="AK3:K10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_73" SheetName="Zone" Text="[&quot;=COUNTIFS(Branch!E:E,@Zone!A:A,Branch!L:L,&quot;&quot;0&quot;&quot;)&quot;]" />
                        <ui:ExcelWriteCell Cell="AL3:L10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_74" SheetName="Zone" Text="[&quot;=COUNTIFS(Area!C:C,@Zone!A:A,Area!K:K,&quot;&quot;0&quot;&quot;)&quot;]" />
                        <ui:ExcelWriteCell Cell="AM3:M10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_75" SheetName="Zone" Text="[&quot;=COUNTIFS(Region!B:B,@Zone!A:A,Region!K:K,&quot;&quot;0&quot;&quot;)&quot;]" />
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Zone completed&quot;]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="438,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
  </Sequence>
</Activity>